<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.21.0312.1301                               -->
<workbook original-version='18.1' source-build='2019.4.18 (20194.21.0312.1301)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='bike_data' inline='true' name='federated.0i3ycwf122q7ra1gfvzcv19pktek' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='bike_data' name='textscan.1ql5vjf04wq43j1b7ja1p0eomzyw'>
            <connection class='textscan' directory='/Users/srk022/git/Tableau_Challenge' filename='bike_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1ql5vjf04wq43j1b7ja1p0eomzyw' name='bike_data.csv' table='[bike_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='tripduration' ordinal='1' />
            <column datatype='datetime' name='starttime' ordinal='2' />
            <column datatype='datetime' name='stoptime' ordinal='3' />
            <column datatype='integer' name='start station id' ordinal='4' />
            <column datatype='string' name='start station name' ordinal='5' />
            <column datatype='real' name='start station latitude' ordinal='6' />
            <column datatype='real' name='start station longitude' ordinal='7' />
            <column datatype='integer' name='end station id' ordinal='8' />
            <column datatype='string' name='end station name' ordinal='9' />
            <column datatype='real' name='end station latitude' ordinal='10' />
            <column datatype='real' name='end station longitude' ordinal='11' />
            <column datatype='integer' name='bikeid' ordinal='12' />
            <column datatype='string' name='usertype' ordinal='13' />
            <column datatype='integer' name='birth year' ordinal='14' />
            <column datatype='integer' name='gender' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[bike_data.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='BikeTrips Same Day Last Year' datatype='integer' name='[Calculation_1838383482930057218]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([starttime]) = YEAR(TODAY())-1&#10;AND DATEPART(&apos;week&apos;, [starttime]) = DATEPART(&apos;week&apos;, TODAY())&#10;AND DATEPART(&apos;weekday&apos;, [starttime]) = DATEPART(&apos;weekday&apos;, TODAY())&#10;THEN [Number of Records]&#10;END' />
      </column>
      <column caption='Calculation1' datatype='integer' name='[Calculation_1838383482937733123]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[birth year]' />
      </column>
      <column caption='Age' datatype='integer' name='[Calculation_1838383482938515460]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='YEAR(Today()) - [birth year]' />
      </column>
      <column caption='Calculation2' datatype='real' name='[Calculation_1838383483223498757]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='' />
      </column>
      <column caption='Distance' datatype='real' name='[Calculation_1838383483223629830]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='3959 * ACOS&#10;(&#10;SIN(RADIANS([start station latitude])) * SIN (RADIANS([end station latitude])) +&#10;COS(RADIANS([start station latitude])) * COS(RADIANS([end station latitude])) * COS(RADIANS ([end station longitude]) - RADIANS([start station longitude]))&#10;)' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
      <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_1838383483223629830]' derivation='Avg' name='[avg:Calculation_1838383483223629830:qk]' pivot='key' type='quantitative' />
      <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1838383483223629830]' derivation='Sum' name='[sum:Calculation_1838383483223629830:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.43923' measure-ordering='alphabetic' measure-percentage='0.56077' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[mn:starttime:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0i3ycwf122q7ra1gfvzcv19pktek].[avg:Calculation_1838383483223629830:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0i3ycwf122q7ra1gfvzcv19pktek].[sum:Calculation_1838383483223629830:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average Distance by Bike ID'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_data' name='federated.0i3ycwf122q7ra1gfvzcv19pktek' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0i3ycwf122q7ra1gfvzcv19pktek'>
            <column caption='Distance' datatype='real' name='[Calculation_1838383483223629830]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='3959 * ACOS&#10;(&#10;SIN(RADIANS([start station latitude])) * SIN (RADIANS([end station latitude])) +&#10;COS(RADIANS([start station latitude])) * COS(RADIANS([end station latitude])) * COS(RADIANS ([end station longitude]) - RADIANS([start station longitude]))&#10;)' />
            </column>
            <column-instance column='[Calculation_1838383483223629830]' derivation='Avg' name='[avg:Calculation_1838383483223629830:qk]' pivot='key' type='quantitative' />
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:bikeid:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
          </pane>
        </panes>
        <rows>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[avg:Calculation_1838383483223629830:qk]</rows>
        <cols>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:bikeid:qk]</cols>
      </table>
      <simple-id uuid='{D9D8B2D8-DCF0-420D-B830-905A55078D67}' />
    </worksheet>
    <worksheet name='Average Trip Duration By Age'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_data' name='federated.0i3ycwf122q7ra1gfvzcv19pktek' />
          </datasources>
          <datasource-dependencies datasource='federated.0i3ycwf122q7ra1gfvzcv19pktek'>
            <column caption='Age' datatype='integer' name='[Calculation_1838383482938515460]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR(Today()) - [birth year]' />
            </column>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1838383482938515460]' derivation='None' name='[none:Calculation_1838383482938515460:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:Calculation_1838383482938515460:qk]' included-values='in-range'>
            <min>16</min>
            <max>85</max>
          </filter>
          <slices>
            <column>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:Calculation_1838383482938515460:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:Calculation_1838383482938515460:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[avg:tripduration:qk]</rows>
        <cols>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:Calculation_1838383482938515460:qk]</cols>
      </table>
      <simple-id uuid='{702F5A21-68E2-4450-BEAB-E427565EF622}' />
    </worksheet>
    <worksheet name='Change in Proportion of User Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_data' name='federated.0i3ycwf122q7ra1gfvzcv19pktek' />
          </datasources>
          <datasource-dependencies datasource='federated.0i3ycwf122q7ra1gfvzcv19pktek'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[usertype]' derivation='Attribute' name='[attr:usertype:nk]' pivot='key' type='nominal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[usertype]' derivation='None' name='[none:usertype:nk]' pivot='key' type='nominal' />
            <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:usertype:nk]' />
              <tooltip column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[attr:usertype:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[sum:Number of Records:qk]</rows>
        <cols>([federated.0i3ycwf122q7ra1gfvzcv19pktek].[yr:starttime:ok] / ([federated.0i3ycwf122q7ra1gfvzcv19pktek].[qr:starttime:ok] / [federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]))</cols>
      </table>
      <simple-id uuid='{164B437F-6E79-43C5-9342-A1EB729C6E2A}' />
    </worksheet>
    <worksheet name='Peak Usage in Summer'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_data' name='federated.0i3ycwf122q7ra1gfvzcv19pktek' />
          </datasources>
          <datasource-dependencies datasource='federated.0i3ycwf122q7ra1gfvzcv19pktek'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:starttime:ok]' member='6' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='7' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='8' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='9' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[sum:Number of Records:qk]</rows>
        <cols>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[hr:starttime:ok]</cols>
      </table>
      <simple-id uuid='{18A8C8ED-9C35-426E-8BB2-EF4B4E6F50A4}' />
    </worksheet>
    <worksheet name='Peak Usage in Winter'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_data' name='federated.0i3ycwf122q7ra1gfvzcv19pktek' />
          </datasources>
          <datasource-dependencies datasource='federated.0i3ycwf122q7ra1gfvzcv19pktek'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:starttime:ok]' member='1' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='2' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='3' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='12' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[sum:Number of Records:qk]</rows>
        <cols>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[hr:starttime:ok]</cols>
      </table>
      <simple-id uuid='{5831CEB4-E8F1-4911-A86F-1AF3385B964F}' />
    </worksheet>
    <worksheet name='Recorded Trips'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_data' name='federated.0i3ycwf122q7ra1gfvzcv19pktek' />
          </datasources>
          <datasource-dependencies datasource='federated.0i3ycwf122q7ra1gfvzcv19pktek'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[sum:Number of Records:qk]</rows>
        <cols>([federated.0i3ycwf122q7ra1gfvzcv19pktek].[yr:starttime:ok] / ([federated.0i3ycwf122q7ra1gfvzcv19pktek].[qr:starttime:ok] / [federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]))</cols>
      </table>
      <simple-id uuid='{0C195030-62C2-4602-A1F5-BADA86AB3469}' />
    </worksheet>
    <worksheet name='Ridership Growth in Percentage'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_data' name='federated.0i3ycwf122q7ra1gfvzcv19pktek' />
          </datasources>
          <datasource-dependencies datasource='federated.0i3ycwf122q7ra1gfvzcv19pktek'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcdf:sum:Number of Records:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
                <order field='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[yr:starttime:ok]' />
                <order field='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[qr:starttime:ok]' />
                <order field='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]' />
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[pcdf:sum:Number of Records:qk:1]</rows>
        <cols>([federated.0i3ycwf122q7ra1gfvzcv19pktek].[yr:starttime:ok] / ([federated.0i3ycwf122q7ra1gfvzcv19pktek].[qr:starttime:ok] / [federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]))</cols>
      </table>
      <simple-id uuid='{E45F7110-E044-4FCB-9258-8C30AD3B1E60}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B5F1D797-D68D-4943-AAE9-F9D7C142F38C}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_data' name='federated.0i3ycwf122q7ra1gfvzcv19pktek' />
          </datasources>
          <datasource-dependencies datasource='federated.0i3ycwf122q7ra1gfvzcv19pktek'>
            <column caption='BikeTrips Same Day Last Year' datatype='integer' name='[Calculation_1838383482930057218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([starttime]) = YEAR(TODAY())-1&#10;AND DATEPART(&apos;week&apos;, [starttime]) = DATEPART(&apos;week&apos;, TODAY())&#10;AND DATEPART(&apos;weekday&apos;, [starttime]) = DATEPART(&apos;weekday&apos;, TODAY())&#10;THEN [Number of Records]&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1838383482930057218]' derivation='Sum' name='[sum:Calculation_1838383482930057218:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:end station name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1838383482930057218])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:end station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:end station name:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[sum:Calculation_1838383482930057218:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:end station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:end station name:nk]</rows>
        <cols>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[sum:Calculation_1838383482930057218:qk]</cols>
      </table>
      <simple-id uuid='{C4ADFFD1-BB28-4D99-A71D-34B18B02162A}' />
    </worksheet>
    <worksheet name='Today&apos;s Bottom 10 Stations for Starting a journey'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_data' name='federated.0i3ycwf122q7ra1gfvzcv19pktek' />
          </datasources>
          <datasource-dependencies datasource='federated.0i3ycwf122q7ra1gfvzcv19pktek'>
            <column caption='BikeTrips Same Day Last Year' datatype='integer' name='[Calculation_1838383482930057218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([starttime]) = YEAR(TODAY())-1&#10;AND DATEPART(&apos;week&apos;, [starttime]) = DATEPART(&apos;week&apos;, TODAY())&#10;AND DATEPART(&apos;weekday&apos;, [starttime]) = DATEPART(&apos;weekday&apos;, TODAY())&#10;THEN [Number of Records]&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_1838383482930057218]' derivation='Count' name='[cnt:Calculation_1838383482930057218:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1838383482930057218]' derivation='Sum' name='[sum:Calculation_1838383482930057218:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[cnt:Calculation_1838383482930057218:qk]' included-values='in-range'>
            <min>92</min>
            <max>220</max>
          </filter>
          <filter class='categorical' column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:start station name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1838383482930057218])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:start station name:nk]</column>
            <column>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[cnt:Calculation_1838383482930057218:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:start station name:nk]</rows>
        <cols>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[sum:Calculation_1838383482930057218:qk]</cols>
      </table>
      <simple-id uuid='{4EC93131-CA74-47EE-A4E2-29D984A24AA9}' />
    </worksheet>
    <worksheet name='Today&apos;s Top 10 Stations for Ending a journey'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_data' name='federated.0i3ycwf122q7ra1gfvzcv19pktek' />
          </datasources>
          <datasource-dependencies datasource='federated.0i3ycwf122q7ra1gfvzcv19pktek'>
            <column caption='BikeTrips Same Day Last Year' datatype='integer' name='[Calculation_1838383482930057218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([starttime]) = YEAR(TODAY())-1&#10;AND DATEPART(&apos;week&apos;, [starttime]) = DATEPART(&apos;week&apos;, TODAY())&#10;AND DATEPART(&apos;weekday&apos;, [starttime]) = DATEPART(&apos;weekday&apos;, TODAY())&#10;THEN [Number of Records]&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_1838383482930057218]' derivation='Count' name='[cnt:Calculation_1838383482930057218:qk]' pivot='key' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1838383482930057218]' derivation='Sum' name='[sum:Calculation_1838383482930057218:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[cnt:Calculation_1838383482930057218:qk]' included-values='in-range'>
            <min>73</min>
            <max>228</max>
          </filter>
          <filter class='categorical' column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:end station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:end station name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:end station name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[sum:Calculation_1838383482930057218:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:end station name:nk]</column>
            <column>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[cnt:Calculation_1838383482930057218:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:end station name:nk]</rows>
        <cols>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[sum:Calculation_1838383482930057218:qk]</cols>
      </table>
      <simple-id uuid='{0EE540A0-D26D-485C-8356-C034FA476D49}' />
    </worksheet>
    <worksheet name='Today&apos;s Top 10 Stations for Starting a journey'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_data' name='federated.0i3ycwf122q7ra1gfvzcv19pktek' />
          </datasources>
          <datasource-dependencies datasource='federated.0i3ycwf122q7ra1gfvzcv19pktek'>
            <column caption='BikeTrips Same Day Last Year' datatype='integer' name='[Calculation_1838383482930057218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([starttime]) = YEAR(TODAY())-1&#10;AND DATEPART(&apos;week&apos;, [starttime]) = DATEPART(&apos;week&apos;, TODAY())&#10;AND DATEPART(&apos;weekday&apos;, [starttime]) = DATEPART(&apos;weekday&apos;, TODAY())&#10;THEN [Number of Records]&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_1838383482930057218]' derivation='Count' name='[cnt:Calculation_1838383482930057218:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1838383482930057218]' derivation='Sum' name='[sum:Calculation_1838383482930057218:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[cnt:Calculation_1838383482930057218:qk]' included-values='in-range'>
            <min>73</min>
            <max>228</max>
          </filter>
          <filter class='categorical' column='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:start station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1838383482930057218])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start station name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:start station name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[sum:Calculation_1838383482930057218:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[cnt:Calculation_1838383482930057218:qk]</column>
            <column>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:start station name:nk]</rows>
        <cols>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[sum:Calculation_1838383482930057218:qk]</cols>
      </table>
      <simple-id uuid='{A79393A5-9D43-4C80-8CED-4E4A6FB55062}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Recorded Trips'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]</field>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0617CE86-43AA-4C0A-BBB8-BB83C42951BF}' />
    </window>
    <window class='worksheet' name='Ridership Growth in Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]</field>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99E1C752-E5A7-481B-867F-4D30AD254C6C}' />
    </window>
    <window class='worksheet' name='Change in Proportion of User Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:usertype:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:usertype:nk]</field>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9FAF308C-54A1-42CE-A64E-56845DEDF977}' />
    </window>
    <window class='worksheet' name='Peak Usage in Summer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]</field>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CF1C68B-BDBC-4B83-8B28-DA24EFEA5ABF}' />
    </window>
    <window class='worksheet' name='Peak Usage in Winter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[mn:starttime:ok]</field>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{832CBD49-77CF-4FF8-ABD9-3BA653401875}' />
    </window>
    <window class='worksheet' name='Today&apos;s Top 10 Stations for Starting a journey'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:end station name:nk]</field>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2AFBA1A5-72F0-498B-9542-5E3174C1F701}' />
    </window>
    <window class='worksheet' name='Today&apos;s Top 10 Stations for Ending a journey'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:end station name:nk]</field>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3AA24279-B5EB-4726-8A3C-EC524F5A6212}' />
    </window>
    <window class='worksheet' name='Today&apos;s Bottom 10 Stations for Starting a journey'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:end station name:nk]</field>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{583650B6-B765-4879-822E-3EE51C24C9F0}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:end station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{51CA250D-10A8-4097-BDEA-80DACCFED63D}' />
    </window>
    <window class='worksheet' name='Average Trip Duration By Age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:Calculation_1838383482938515460:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:Calculation_1838383482938515460:qk]</field>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:birth year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCE8E0C1-CAA3-4D2E-BA32-BE0DF2E1D587}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:bikeid:qk]</field>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:birth year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A3DA7ED1-B62A-40D6-B7B3-DF5B336AEA5A}' />
    </window>
    <window class='worksheet' maximized='true' name='Average Distance by Bike ID'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[:Measure Names]</field>
            <field>[federated.0i3ycwf122q7ra1gfvzcv19pktek].[none:bikeid:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7397ACBE-9166-49A9-83BE-18815C001A1C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Distance by Bike ID' width='192'>
      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
      5YNLLwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average Trip Duration By Age' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Change in Proportion of User Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Peak Usage in Summer' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Peak Usage in Winter' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Recorded Trips' width='192'>
      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
      GZMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ridership Growth in Percentage' width='192'>
      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
      IcY/Ap8dxAdkXofeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
      e3s7w8PD1NTUiJsynU6zuLhIS0sLKysrBINB/H4/qVSK2dlZ7t69S1NTE2tra6yurtLc3MzK
      ygpra2uiK/bo0SNmZmYIhUKk02kcDgcmk4lCocDi4mLJfgfJxudHRyMWi0UeP35MOp3GZDKR
      zWaprq7G6/UyMzOD0+lkx44d4gZOp9M0NTWJzSiVlZWYTCZqampIpVJs3boVt9tNdXU1a2tr
      LC8vo6oqjY2NmM1mXC4X0WiUYDBIV1cXlZWVOBwOMRNkNBqxWCxs2bIFt9uN2+1GVVW6urqE
      UIrFItFolGQySSQSIZlM0tbWRnV1NePj4xQKBQ4cOCC2Yuqht6qq4vf7MRqN5PN5pqamCIVC
      NDY2sm3bNtFtWl5exu/3l3h/ZDTixua1m+G+Kybw21BVtaT7oD/tn+9S6LGHzzpKX1eXo1gs
      ivP9X8d82fXpXajn3a7SDLexkW7QnxgpgI2NtEJIyhopAElZIwUgKWukACRlzWtxgz6f1pZK
      pb7VDZrP51/qsPy+59KrOr7K2L1QKIiN+zq5XO6FOXz9uz1/ru8qrC3ZXLxSiaTZ2VnOnj3L
      6uoq7e3tFItFLl68yMOHDxkZGcHr9Za4QRVF4T/+4z/EotgPmcLM5/OcOXOGqfzCIu4AAA9T
      SURBVKkpbt26RWtrq1gDWFpaEhGJ+Xyef/mXf6G6uhqfz8elS5fE6nAul+Pq1avcvn2bBw8e
      EIlEaGtrY3BwkBs3bjA6Oordbsfv96OqKqOjo/znf/4nO3bsKFmR/uqrr5ienmZ+fl58dnp6
      +qXlXOU6wMbmlf5nMpkMW7ZsES1AMpkkHo/zm9/8htnZWZ48eUJjY6OYG19aWqKmpkY8yfXc
      z9raWrLZLEtLS7S1tXH37l2Wl5fZvXs3ra2twLoAkskkf//3f8/FixeJx+PCEOf3+1lZWUFV
      VcLhMDabjUQigaIoJBIJYY0wGAz09vZy4sQJotEo58+fJxqNsri4yO9+9zsymQxnz56lq6uL
      VCrF/Py8uF6dkZERjh8/TktLC5lMRhTbHhsbY3l5mb1798p0uE3EK3WBenp6RNE6WM/yrKmp
      wWq14vP5yOfzJRXb5+bm6O7uxuVysbq6SjabZXR0FE3TGBsbI5VKCRv09u3b6e/vF90Sp9NJ
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Today&apos;s Top 10 Stations for Ending a journey' width='192'>
      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
      vub/B/Ox6RjH69krAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Today&apos;s Top 10 Stations for Starting a journey' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
